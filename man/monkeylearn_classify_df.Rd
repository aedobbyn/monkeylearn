% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classify_df.R
\name{monkeylearn_classify_df}
\alias{monkeylearn_classify_df}
\title{monkeylearn_classify_df}
\usage{
monkeylearn_classify_df(request_df, col, key = monkeylearn_key(quiet = TRUE),
  classifier_id = "cl_oFKL5wft", params = NULL, texts_per_req = 200,
  unnest = FALSE, verbose = FALSE)
}
\arguments{
\item{request_df}{A dataframe of texts (each text smaller than 50kB)}

\item{col}{The unquoted name of the character column containing text to classify}

\item{key}{The API key}

\item{classifier_id}{The ID of the classifier}

\item{params}{Parameters for the module as a named list.}

\item{texts_per_req}{Number of texts to be fed through per request. Does not affect output, but may affect speed of processing.}

\item{unnest}{Should the output column be unnested?}

\item{verbose}{whether to output messages about batch requests}
}
\value{
A data.frame (tibble) with the cleaned input (empty strings removed) and a new column, nested by default, containing the classification for that particular row.
Attribute is a data.frame (tibble) "headers" including the number of remaining queries as "x.query.limit.remaining".
}
\description{
Independent classifications for each row of a dataframe using the Monkeylearn classifiers modules
}
\details{
Find IDs of classifiers using \url{https://app.monkeylearn.com/main/explore}.

Each row of the dataframe is classified separately from all of the others, but the number of classifications a particular input row
is assigned may vary (unless you specify a fixed number of outputs in \code{params}).
This function relates the rows in your original dataframe to a classification particular to that row.
This allows you to know which row of your original dataframe is associated with which classification.

The \code{texts_per_req} parameter simply specifies the number of rows to feed the API at a time; it does not lump these together
for classification as a group.

You can check the number of calls you can still make in the API using \code{attr(output, "headers")$x.query.limit.remaining}
and \code{attr(output, "headers")$x.query.limit.limit}.
}
\examples{
\dontrun{
text1 <- "Hauràs de dirigir-te al punt de trobada del grup al que et vulguis unir."
text2 <- "i want to buy an iphone"
text3 <- "Je déteste ne plus avoir de dentifrice."
text_4 <- "I hate not having any toothpaste."
request_df <- tibble::as_tibble(list(txt = c(text1, text2, text3, text_4)))
monkeylearn_classify_df(request_df, txt, texts_per_req = 2, unnest = TRUE
attr(output, "headers")}

}
